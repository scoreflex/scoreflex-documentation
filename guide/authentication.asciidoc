[[guide-authentication]]
[role="chunk-page chunk-toc"]
== Authentication

In order to interact with the Scoreflex API you have first to
authenticate your player to obtain an access token and a sid. There are
currently 3 different ways to authenticate via the
http://developer.scoreflex.com/docs/reference/api/v1#OAuthService[authentication
service]:

. Guest authentication
. Web authentication
. Client-side authentication

[[guide-authentication-guest-authentication]]
=== Guest authentication

[[guide-authentication-guest-authentication-concepts]]
==== Concepts

_Guest_ players are also referenced as _Anonymous_ players throughout Scoreflex.
It can be nice to give your players an overview of Scoreflex features
(like leaderboards, challenges, storage, achievements...) and to involve
them deeply in your game competition even if they are not explicitly logged in your game.

To serve that purpose, Scoreflex can generate anonymous players for you with
an automatically generated nickname and avatar. The guest experience, although
limited, can already boost usage to your games and smooth out the conversion to
the authenticated world. It is better to convince your players to authenticate by
involving them into the competition rather than to just abruptly ask them to log in.

A guest player is attached to a gaming device and more precisely to its device id.
Therefore, if Bob launches your game _A_ on his iPhone 4 and plays as a guest, an
anonymous player is created for him. If later, Bob launches your other game _B_ on
his iPhone 4 he will be assigned the same anonymous player.

[[guide-authentication-guest-authentication-interact]]
==== Interact

[[guide-authentication-guest-authentication-interact-authenticating-guest-player]]
===== Authenticating a guest player

[source,sh]
----
$> curl -XPOST 'https://sandbox.api.scoreflex.com/v1/oauth/anonymousAccessToken'\
'?clientId=<CLIENT_ID>'\
'&clientSecret=<CLIENT_SECRET>'\
'&devicePlatform=<PLATFORM>'\
'&deviceModel=<MODEL>'\
'&deviceId=<DEVICE_ID>'
----

[source,js]
----
{
  "accessToken": {
    "token": "MGQyOGM1NTM3YmE3OWFkNjNiNmZhNTlhMzhkZmNkZTUwZmY0MDZlYTIyNGU4ZGU4MjQ1OGJmMzgyY2U5NDQxNw",
    "scope": "anonymous"
  },
  "me": {
    "id": "018ff3426nhtstg1",
    "nickName": "CarmenSodiegan25",
    "language": "en",
    "nationality": "US",
    "avatarUrl": "https://www.scoreflex.com/sandbox/avatars/players/018ff3426nhtstg1/",
    "url": "http://sandbox.api.scoreflex.com/v1/web/players/018ff3426nhtstg1",
    "geo": {
      "id": "cYjPGhGBlgP",
      "title": "San Francisco 94133",
      "formatted": "San Francisco 94133, CA, United States",
      "adminLevel": "postalCode",
      "countryCode": "US"
    }
  },
  "sid": "3c6243fc21b6e899dc1a3a05365c897073f14250de286dfc3a417b8cba43bcce"
}
----

You now have a guest player, an access token and a sid you can use to interact with Scoreflex API and Scoreflex Web components.


[[guide-authentication-guest-authentication-reference]]
==== Reference

[[guide-authentication-guest-authentication-reference-apis]]
===== APIs

* http://developer.scoreflex.com/docs/reference/api/v1#post_{empty}_v1_oauth_anonymousAccessToken[anonymousAccessToken reference].

[[guide-authentication-web-authentication]]
=== Web authentication

[[guide-authentication-web-authentication-concepts]]
==== Concepts

If you don't want to create a Facebook or a Google+ application for your game, Scoreflex allows you to authenticate your players via Facebook or Google+ inside a webview. This method can also be useful if your game is only running on a web browser. This will work out of the box without any configuration on your part.

The web authentication workflow is very similar to http://oauth.net/2/["OAuth 2.0", window="_blank"]:

. Open a webview to +http://{sandbox.}api.scoreflex.com/v1/oauth/web/authorize+.
. Your player will be asked to choose a social network.
. Your player will have to log in to the selected social network if they are not already logged in.
. Your player will have to authorize Scoreflex to access their information.
. If everything goes well a code is returned by Scoreflex to your game via a web callback.
. You can trade this code with an access token for your player.

NOTE: Don't worry if it seems complicated, if you use a SDK it will handle these steps for you.

[[guide-authentication-web-authentication-interact]]
==== Interact

. First, direct your player to
+https://{sandbox.}api.scoreflex.com/v1/oauth/web/authorize?clientId=<CLIENT_ID>&devicePlatform=<PLATFORM>&deviceModel=<MODEL>&state=<RANDOM_STRING>+.
. If everything goes well, you will received a code and your state via a web callback.
. Trade the code with an access token:

[source,sh]
----
$> curl -XPOST 'https://sandbox.api.scoreflex.com/v1/oauth/accessToken'\
'?clientId=<CLIENT_ID>'\
'&code=<CODE>'
----

[source,js]
----
{
  "accessToken": {
    "scope": "player",
    "token": "MGZjODFjMjViYjY1ZTVhMmIzMzNlZGNmNDIxNGMwMmVhMDBmOWJkNGU1MWNjODdmYjdhYmMwNDFiOGZmYmRiZA"
  },
  "me": {
    "firstName": "Chuck",
    "language": "en",
    "avatarUrl": "https://www.scoreflex.com/avatars/players/0189qhg0e0dg0ig1/",
    "url": "http://sandbox.api.scoreflex.com/v1/web/players/0189qhg0e0dg0ig1",
    "lastName": "Norris",
    "geo": {
      "id": "cYjPGhGBlgP",
      "title": "San Francisco 94133",
      "formatted": "San Francisco 94133, CA, United States",
      "adminLevel": "postalCode",
      "countryCode": "US"
    },
    "nationality": "US",
    "nickName": "Chuck",
    "id": "0189qhg0e0dg0ig1"
  },
  "merge": false,
  "sid": "90f429770e06526f0978fd27f6965a6807bb03e182d26afdf637829f4028c53e"
}
----

You now have an authenticated player, an access token and a sid you can use to interact with Scoreflex API and Scoreflex Web components.


[[guide-authentication-web-authentication-reference]]
==== Reference

[[guide-authentication-web-authentication-reference-apis]]
===== APIs

* http://developer.scoreflex.com/docs/reference/api/v1#get_{empty}_v1_oauth_web_authorize[authorize reference]
* http://developer.scoreflex.com/docs/reference/api/v1#post_{empty}_v1_oauth_accessToken[accessToken reference].

[[guide-authentication-client-side-authentication]]
=== Client-side authentication

[[guide-authentication-client-side-authentication-concepts]]
==== Concepts

We encourage you to define your own Facebook, Google+ and Twitter applications for your mobile games and to enable native login. In this approach,
your player won't have to type their login and password to authenticate themselves and the authentication process will be smoother.

[[guide-authentication-client-side-authentication-interact]]
==== Interact

. Obtain an access token on Facebook, Google+ or Twitter by authentication your player via your Facebook, Google+ or Twitter application
. Give this access token to scoreflex with the following call:

[source,sh]
----
$> curl -XPOST 'https://sandbox.api.scoreflex.com/v1/oauth/accessTokenExternallyAuthenticated'\
'?clientId=<CLIENT_ID>'\
'&devicePlatform=<PLATFORM>'\
'&deviceModel=<MODEL>'\
'&service=<SERVICE>'\
'&serviceAccessToken=<SERVICE_ACCESS_TOKEN>'\
'&deviceId=<DEVICE_ID>'
----

[source,js]
----
{
  "accessToken": {
    "scope": "player",
    "token": "MGZjODFjMjViYjY1ZTVhMmIzMzNlZGNmNDIxNGMwMmVhMDBmOWJkNGU1MWNjODdmYjdhYmMwNDFiOGZmYmRiZA"
  },
  "me": {
    "firstName": "Chuck",
    "language": "en",
    "avatarUrl": "https://www.scoreflex.com/avatars/players/0189qhg0e0dg0ig1/",
    "url": "http://sandbox.api.scoreflex.com/v1/web/players/0189qhg0e0dg0ig1",
    "lastName": "Norris",
    "geo": {
      "id": "cYjPGhGBlgP",
      "title": "San Francisco 94133",
      "formatted": "San Francisco 94133, CA, United States",
      "adminLevel": "postalCode",
      "countryCode": "US"
    },
    "nationality": "US",
    "nickName": "Chuck",
    "id": "0189qhg0e0dg0ig1"
  },
  "merge": false,
  "sid": "90f429770e06526f0978fd27f6965a6807bb03e182d26afdf637829f4028c53e"
}
----

You now have an authenticated player, an access token and a sid you can use to interact with Scoreflex API and Scoreflex Web components.

[NOTE]
====
The +serviceAccessToken+ parameter can be a simple or a complex JSON +string+. For example, when authenticating via Twitter
the +serviceAccessToken+ parameter will look like this: +
[source,js]
----
serviceAccessToken={"access_token":"<ACCESS_TOKEN>","access_token_secret":"<ACCESS_TOKEN_SECRET"}
----
====

[[guide-authentication-client-side-authentication-reference]]
==== Reference

[[guide-authentication-client-side-authentication-reference-apis]]
===== APIs

* http://developer.scoreflex.com/docs/reference/api/v1#post_{empty}_v1_oauth_accessTokenExternallyAuthenticated[accessTokenExternallyAuthenticated reference].


[[guide-authentication-merging-guest-player]]
=== Merging guest player

When authenticating a player via the web authentication or the client-side authentication you may already have a guest player and you may want to merge the guest player performance into the newly authenticated player.

To do so, you can give the +anonymousAccessToken+ parameter to the +accessToken+ and +accessTokenExternallyAuthenticated+ calls.
