[[guide-challenges-interact]]
[role="chunk-page chunk-toc"]
=== Interact

--
--

[[guide-challenges-interact-creating-a-challenge-config]]
==== Creating a challenge config

. Log into your developer account and choose your game.
. You can opt to use a wizard under the “Socialization Dashboard”.
  Choose the “Create a challenge” wizard if available and follow the
  steps. You're done!
. Otherwise you can opt to do it manually, under “Services” get into
  “Challenges” and create a new challenge.
. Choose an identifier. Use any short descriptive name you may use in
  your code. Note that you cannot change it afterwards.
. You can upload an image and change the displayed name and
  description of the challenge under the “General” section. +
  Toggle each section and hover the “?” button for online help. Do not
  hesitate to refer to the
  http://developer.scoreflex.com/docs/challenge/reference/config[ChallengeConfig
  Reference] for more detailed explanation. +
  Once familiar with those concepts, you can also edit the JSON object
  directly under the form. +
  If unsure, you can always test and come back later on to adjust some
  settings.
. Submit the form. You're done!

A REST Management API is also opened for developers who wish to
programmatically create (many) challenges. See the corresponding calls
to
http://developer.scoreflex.com/docs/reference/api/v1#get_\_v1_management_games_gameId_challenges_configs[list all configs],
http://developer.scoreflex.com/docs/reference/api/v1#post_\_v1_management_games_gameId_challenges_configs_challengeId[create or update a config],
http://developer.scoreflex.com/docs/reference/api/v1#get_\_v1_management_games_gameId_challenges_configs_challengeId[read a config],
and
http://developer.scoreflex.com/docs/reference/api/v1#delete__v1_management_games_gameId_challenges_configs_challengeId[delete a config].

Note that all the changes are done in the sandbox. Don't forget to
synchronize your changes in production when ready.

[[guide-challenges-interact-editing-a-challenge-config]]
==== Editing a challenge config

You can edit the challenge configuration in the same way you created it,
using the same form, or
http://developer.scoreflex.com/docs/reference/api/v1#post__v1_management_games_gameId_challenges_configs_challengeId[the same REST Management call].

However, note that the configurations have an associated version, and
modifying some properties imply bumping the version.

When the version bumps, the requests made against the older version
won't match the requests made against the newer version. Similarly, if
your challenge is replayable, all the recorded players will be dropped
as they would no longer be compatible.

Modifying the following fields would bump the configuration version:

* Most core attributes: replayable, seed, custom settings, but not
  display related attributes.
* All turn attributes.
* All challenge end condition attributes.
* Most outcome attributes, but not formatting related attributes, except
  for display attributes like the show score policy which may affect the
  gameplay.

As a rule of thumb, any parameter that would break the way the recorded
players work or change the gameplay will imply a version bump.

[[guide-challenges-interact-handling-challenge-start]]
==== Handling challenge start

If you use the REST API in your game, check that the challenge instance
status is +"running"+, and start your game loop. You're done!

If you use the Scoreflex Webview, you will need to handle the challenge
start callback of your SDK, or to listen to the appropriate web callback
code in the
http://developer.scoreflex.com/docs/reference/api/v1#get__v1_web_callback[web callback endpoint].

[[guide-challenges-interact-implementing-challenge-into-the-game]]
==== Implementing challenge into the game

First, always make sure to be in sync with the server.

. Check the instance status:
..  If the instance is +"waiting"+ or +"aborted"+, you could display the invited
    players' statuses.
..  If the instance is +"ended"+, you should display the challenge outcome,
    the winners and losers.
. Otherwise, if the instance is +"running"+, you should fetch every turn
  messages and challenge state, depending on your needs, and start the
  game loop.
. The game loop should start by replaying the opponents moves since
  the user last played, or display the updated game status: remaining
  turns, board, deck, scores, etc.
. If it is the player's turn to play, you should let him do so.
. At the end of its turn, you should then submit a turn message.
. After this call succeeds, fetch the instance again, check the
  instance did not just end, display  the current outcome, and whose turn
  it is now.

NOTE: Remarks on getting out of sync: You would otherwise make the user play
and the result of its action would be lost as the turn message could get
refused because the turn changed. If the game is paused for some time,
the turn timeout could have been hit, an opponent may have ended the
game, or the player could have switched to another device of his.

In some cases it can be normal to have your turn refused and you will
fetch the new challenge messages and state, and see if you can repost
the player's turn with the updated turn sequence.

These issues are inherent in the nature of distributed games. But don't
worry, Scoreflex is here to guide you.
