[[guide-matchmaking]]
[role="chunk-page chunk-toc"]
== Matchmaking

[[guide-matchmaking-concepts]]
=== Concepts

Matchmaking is the process of finding suitable mates using diverse criteria.

It is used to match players with similar and compatible wishes so they
can play together.

Scoreflex can match players using two types of criteria: player-centric,
and request-centric. One can decide who can match, in addition to
defining compatible requests.

This way a player can play with his fellows that have the same wishes,
instead of any random player in the world.

For instance, a player can ask to match against a player with similar
skill, of the opposite gender, who lives nearby, and of similar age!

[[guide-matchmaking-interact]]
=== Interact

See:

* xref:guide-challenges-reference-challengeconfig-attributes-matchmakingconfig[+ChallengeConfig.matchmaking+]
* xref:guide-challenges-reference-challengerequest-attributes-matchmakingconfig[+ChallengeRequest.matchmaking+]
* xref:guide-challenges-reference-challengeconfig-attributes-target[+ChallengeConfig.target+]

[[guide-matchmaking-reference]]
=== Reference

[[guide-matchmaking-reference-playerfilter]]
==== PlayerFilter

A PlayerFilter defines criteria to match players and their
requests.

The defined criteria can either filter a match, if used in "must" or
"must not" modes, or score a match, if used in "should" or "should not"
modes.

Some special values are resolved to a normal value at some point in
time. They are only usable in the advertised fields.

* +"SAME"+ -- Resolved to the value of the corresponding field for the
player causing the value to be resolved.
* +"OPPOSED"+ -- Resolved to the opposite value of the corresponding field
for the player causing the value to be resolved.

[[guide-matchmaking-playerfilter-attributes]]
[role="chunk-toc"]
===== Attributes

Here is the list of the available attributes that each define a criterium:

[[guide-matchmaking-playerfilter-attributes-lastActivityMin]]
[float]
====== lastActivityMin

Type: ++duration++

How old minimum is the matching player's last activity.

[[guide-matchmaking-playerfilter-attributes-lastActivityMax]]
[float]
====== lastActivityMax

Type: ++duration++

How old maximum is the matching player's last activity.

[[guide-matchmaking-playerfilter-attributes-gamesCountMin]]
[float]
====== gamesCountMin

Type: +long+ [ 0 ; 9223372036854775807 ]

The minimum number of Scoreflex games the matching player has ever
played at.

[[guide-matchmaking-playerfilter-attributes-gamesCountMax]]
[float]
====== gamesCountMax

Type: +long+ [ 0 ; 9223372036854775807 ]

The maximum number of Scoreflex games the matching player has ever
played at.

[[guide-matchmaking-playerfilter-attributes-games]]
[float]
====== games

Type: +array+

Values: xref:guide-games-reference[Game.id]

The Scoreflex games the matching player must have played.

[[guide-matchmaking-playerfilter-attributes-friendsCountMin]]
[float]
====== friendsCountMin

Type: +long+ [ 0 ; 9223372036854775807 ]

The minimum number of friends the matching player has.

[[guide-matchmaking-playerfilter-attributes-friendsCountMax]]
[float]
====== friendsCountMax

Type: +long+ [ 0 ; 9223372036854775807 ]

The maximum number of friends the matching player has.

////
[[guide-matchmaking-playerfilter-attributes-gameRatingMin]]
[float]
====== gameRatingMin

Type: +long+ [ 0 ; 3000 ]

???????????

[[guide-matchmaking-playerfilter-attributes-gameRatingMax]]
[float]
====== gameRatingMax

Type: +long+ [ 0 ; 3000 ]

???????????
////

////
[[guide-matchmaking-playerfilter-attributes-challengesRatingMin]]
[float]
====== challengesRatingMin

Type: +long+ [ 0 ; 3000 ]

The minimum rating of the matching player for all challenges together.

[[guide-matchmaking-playerfilter-attributes-challengesRatingMax]]
[float]
====== challengesRatingMax

Type: +long+ [ 0 ; 3000 ]

The maximum rating of the matching player for all challenges together.

[[guide-matchmaking-playerfilter-attributes-challengeRatingMin]]
[float]
====== challengeRatingMin

Type: +long+ [ 0 ; 3000 ]

The minimum rating of the matching player for the challenge at hand.

[[guide-matchmaking-playerfilter-attributes-challengeRatingMax]]
[float]
====== challengeRatingMax

Type: +long+ [ 0 ; 3000 ]

The maximum rating of the matching player for the challenge at hand.
////

[[guide-matchmaking-playerfilter-attributes-memberSinceMin]]
[float]
====== memberSinceMin

Type: +duration+

How long minimum the matching player has been a Scoreflex member.

[[guide-matchmaking-playerfilter-attributes-memberSinceMax]]
[float]
====== memberSinceMax

Type: +duration+

How long maximum the matching player has been a Scoreflex member.

[[guide-matchmaking-playerfilter-attributes-gender]]
[float]
====== gender

Type: +array+

Values: +"male"+, +"female"+, +"other"+, or +"SAME"+ and +"OPPOSED"+

The admissible gender of the matching player.

[[guide-matchmaking-playerfilter-attributes-birthWeekDay]]
[float]
====== birthWeekDay

Type: +array+

Values: +"monday"+, +"tuesday"+, +"wednesday"+, +"thursday"+, +"friday"+,
+"saturday"+, +"sunday"+, or +"SAME"+

The admissible weekdays of the matching player's birthdate.

[[guide-matchmaking-playerfilter-attributes-birthDay]]
[float]
====== birthDay

Type: +array+

Values: +long+ [ 1 ; 31 ], or +"SAME"+

The admissible days of month of the matching player's birthdate.

[[guide-matchmaking-playerfilter-attributes-birthMonth]]
[float]
====== birthMonth

Type: +array+

Values: +long+ [ 1 ; 12 ], or +"SAME"+

The admissible months of the matching player's birthdate.

[[guide-matchmaking-playerfilter-attributes-birthYearMin]]
[float]
====== birthYearMin

Type: +long+ [ 1900 ; 3000 ], or +"SAME"+

The minimum year of birth of the matching player.

[[guide-matchmaking-playerfilter-attributes-birthYearMax]]
[float]
====== birthYearMax

Type: +long+ [ 1900 ; 3000 ]

The maximum year of birth of the matching player.

[[guide-matchmaking-playerfilter-attributes-birthDateMin]]
[float]
====== birthDateMin

Type: +timestamp+

The date the matching player must be born after.

[[guide-matchmaking-playerfilter-attributes-birthDateMax]]
[float]
====== birthDateMax

Type: +timestamp+

The date the matching player must be born before.

[[guide-matchmaking-playerfilter-attributes-anniversary]]
[float]
====== anniversary

Type: +duration,+ or special constant +"today"+

The maximum duration for the matching player to have its birthday. The
granularity is one day.

If you give +"1 month"+, only the players that will celebrate their
birthday within one month will match.

[[guide-matchmaking-playerfilter-attributes-ageMin]]
[float]
====== ageMin

Type: +long+ [ 0 ; 122 ], or +"SAME"+

The minimum age of the matching player, in years.

[[guide-matchmaking-playerfilter-attributes-ageMax]]
[float]
====== ageMax

Type: +long+ [ 0 ; 122 ], or +"SAME"+

The maximum age of the matching player, in years.

[[guide-matchmaking-playerfilter-attributes-language]]
[float]
====== language

Type: +array+

Values: xref:guide-api-conventions-internationalization[+language+] or +"SAME"+

Restricts the language of the matching player. If you give an non
localized language code, only two characters and no separating
underscore, like +"en"+, you allow localized languages to match, such as
+"en_US"+ and +"en_GB"+. The opposite won't match.

[[guide-matchmaking-playerfilter-attributes-geo]]
[float]
====== geo

Type: +array+

Values: Either:
--
* +"\{SOURCE\}=\{LOCATION\}"+,
* +"\{SOURCE\}.country=\{COUNTRY\}"+,
* +"\{SOURCE\}.around=\{NUMBER\}km"+,
* +"\{SOURCE\}.around=\{NUMBER\}mi"+,
* +"source=SAME"+,
* or +"\{SOURCE\}.country=SAME"+;
--
where:
--
* +\{SOURCE\}+ can be either +"home"+ or +"current"+,
* +\{LOCATION\}+ is the precise name (with state and country) of a location like
  +"Manhattan, NY, USA"+,
* and +\{NUMBER\}+ is a floating point number.
--

Restrict the current location or declared home location of a matching
player. You can either name a more or less precise location, or a whole
country, or a nearby location with a given radius.

The +"around"+ facility is a special value in the same way as +"SAME"+, and
may not be acceptable in all contexts.

[[guide-matchmaking-playerfilter-attributes-nationality]]
[float]
====== nationality

Type: +array+

Value: xref:guide-api-conventions-internationalization[+nationality+] or +"SAME"+

Restricts the nationality of the matching player.

[[guide-matchmaking-playerfilter-attributes-custom]]
[float]
====== custom

Type: +object+

Format: +{ "string key": "string value", â€¦ }+

Any custom key-value pairs the request of the matching players must
have.
